#!/usr/bin/env bash
#
# (re-)installer for lsdiskowipe required tools and the program modules
#
# (C) Gerold Gruber, 2023-2025, licensed under the EUPL-1.2-or-later
#

has_program() {
	command -v "${1:?No command to test}" >/dev/null 2>&1
}

if [ "$( whoami )" != "root" ] ; then
	echo "${0}: I must run with root priviledges, which is apparently not the case."
	echo Aborting.
	exit 1
fi

# perl must be avaiable
if ! has_program perl ; then
	echo "${0}: perl not found, aborting";
	exit 255;
fi

# intended to work on different platforms
if has_program apt ; then
	INSTALL="apt install "
elif has_program dnf ; then
	INSTALL="dnf install "
elif has_program yum ; then
	INSTALL="yum install "
fi

# make sure helper programs are available
for i in lsscsi lspci smartctl readlink sg_readcap hdparm nvme; do
	if ! has_program $i ; then
                if [ "$i" == "lsscsi" ] ; then
                        i=lsscsi
                elif [ "$i" == "lspci" ] ; then
 			i=pciutils
		elif [ "$i" == "smartctl" ] ; then
			i=smartmontools
		elif [ "$i" == "readlink" ] ; then
			i=coreutils
		elif [ "$i" == "sg_readcap" ] ; then
			i=sg3-utils
		elif [ "$i" == "nvme" ] ; then
			if ( ls /dev/nvme* 2>/dev/null | grep -q nvme ) ; then
				i=nvme-cli
			else
				break
			fi
		fi
		$INSTALL $i
	fi	 
done

# update the smartdrivedb
if [ "$1" != "-C" ] ; then
	if  has_program update-smart-drivedb ; then
		update-smart-drivedb
	fi
fi

# install the program's modules
MODPATH=$( perl -e '@modpath=grep(/local/, @INC); print $modpath[$#modpath]' )

# use a subdirectory for our modules
MODPATH=$MODPATH/lsdiskowipe

if [ "y$MODPATH" == "y" ] ; then
	echo "${0}: could not determine the local path for dropping perl modules"
	echo "aborting"
	exit 254
fi


if [ ! -d $MODPATH ] ; then
	mkdir -p $MODPATH
fi

cp -p *.pm $MODPATH

echo done.
